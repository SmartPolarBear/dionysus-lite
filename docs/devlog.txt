1/09/2020
Conclusion:
1) there may not be many problems in spinlock implementation, neither should clang be to blame for this
2) console and memset are suspects

1/10/2020
Discovery:
extern "C" will cause unexpected randomly reordering of parameter data
e.g you call func(A,B) with something like func(1,2) yet you get A=2 B=1 inside func.
*************
The discovery below leads to the truth, but the conclusion above is completely wrong
It is ignored that the screen froze before crashing at the memset, which is the key to the problem.
In putchar implementation in cga.cc, 24*80-pos is mistaken by 24+80-pos, causing the parameter passed to memset
overflow to INT64_MAX. As it is so big, I mistaken it as an address in a wrong place, that's why I came to a wrong
conclusion

1/12/2020
Plan to improve console, solving:
1) the numbers is truncate in wrong place
2) the lack of ability of showing decimal data or long int data
3) the slow speed

1/15/2020
1) Basically finsihed the tasks concerning console.
    NOTE: the %f flag is still not available because va_arg doesn't return right values
2) Plan to save multiboot info with another data structure because some type of information structure
    may appear many times, and with the simple array like now, I can only get one of them
3) Plan to load ap_boot alongside as a boot module instead of copy it after the kernel binary.

1/17/2020
Done:
1) Finished the plan, discussed above, concerning re-implementation of multiboot info data structure
2) Finished the plan, discussed above, concerning seperate ap_boot from kernel as a boot module
3) Have implemented a linked list in a Linux kernel style
Plans:
1) Implement the buddy (may be with the slab) memory allcator
    a. Classify files in /kern/mm into seperate directories
    b. Implement buddy
2) Implement a higher-level abstraction for devices,  including but not limited to console and memory manager
    a. Refactory code
    b. Design and impelement a universal interface for them.
    c. Most importantly, make new and delete operator work.

1/19/2020
Done:
1) finished codes of the initialization of buddy along with free memory.
    ! yet to be called in the kernel's main

1/27/2020
1) The memory layout needs adjusting
2) Implement a slab allocator

1/30/2020
Done:
1) Finished buddy and slab and C++ operators for memory allocation
Plan:
1) Adjust memory layout
2) Implement the process manager

