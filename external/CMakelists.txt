cmake_minimum_required(VERSION 3.16 FATAL_ERROR)

set(COMMON_PREFIX ${CMAKE_BINARY_DIR}/external/prefix)

# newlib

include(ExternalProject)

set(NEWLIB_CFLAGS "-fPIC -nostdlibinc -mno-red-zone -D__ELF__ -D_LDBL_EQ_DBL -D_GNU_SOURCE -D_POSIX_TIMERS")

set(NEWLIB_SRCDIR ${CMAKE_CURRENT_SOURCE_DIR}/newlib-cygwin)


set(TARGET_TRIPLE x86_64-unknown-none-elf)

set (NEWLIB_STATIC_LIB ${COMMON_PREFIX}/lib/libc.a ${COMMON_PREFIX}/lib/libg.a ${COMMON_PREFIX}/lib/libm.a)

list(APPEND NEWLIB_INCLUDE_PATH ${COMMON_PREFIX}/include)
list(APPEND NEWLIB_INCLUDE_PATH ${COMMON_PREFIX}/include/sys)

file(MAKE_DIRECTORY ${COMMON_PREFIX})
file(MAKE_DIRECTORY ${NEWLIB_INCLUDE_PATH})

ExternalProject_Add(
    newlib_cygwin
    PREFIX ${COMMON_PREFIX} 
    SOURCE_DIR ${NEWLIB_SRCDIR}
    CONFIGURE_COMMAND ${NEWLIB_SRCDIR}/newlib/configure CC=clang CC_FOR_BUILD=clang CFLAGS=${NEWLIB_CFLAGS} --target=${TARGET_TRIPLE} --prefix=${COMMON_PREFIX} --disable-multilib --disable-newlib-multithread
    BUILD_BYPRODUCTS ${NEWLIB_STATIC_LIB}
)

add_library(newlib STATIC IMPORTED GLOBAL)

add_dependencies(newlib newlib_cygwin)


set_target_properties(newlib PROPERTIES IMPORTED_LOCATION ${NEWLIB_STATIC_LIB})
set_target_properties(newlib PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${NEWLIB_INCLUDE_PATH}")


# llvm cxx libraries

# libcxxabi

set(LIBCXXABI_SRCDIR ${CMAKE_CURRENT_SOURCE_DIR}/libcxxabi)


set(LIBCXXABI_CFLAGS "-I${COMMON_PREFIX}/include -nostdlibinc -mno-red-zone -D__ELF__ -D_LDBL_EQ_DBL -D_GNU_SOURCE -D_POSIX_TIMERS  -D_LIBCPP_HAS_NO_THREADS")

file(MAKE_DIRECTORY ${COMMON_PREFIX})


list(APPEND LIBCXXABI_CMAKE_ARGS
    -DCMAKE_INSTALL_PREFIX=${COMMON_PREFIX} 
    -DCMAKE_CXX_COMPILER=clang++
    -DCMAKE_CXX_FLAGS=${LIBCXXABI_CFLAGS}
    -DCMAKE_C_COMPILER=clang
    -DCMAKE_C_FLAGS=${LIBCXXABI_CFLAGS}
    -DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY 
    -DCMAKE_BUILD_TYPE=Release
    -DLIBCXXABI_LIBCXX_INCLUDES=${CMAKE_CURRENT_SOURCE_DIR}/libcxx/include
    -DLIBCXXABI_ENABLE_EXCEPTIONS=False 
    -DLIBCXXABI_ENABLE_THREADS=False 
    -DLIBCXXABI_TARGET_TRIPLE=${TARGET_TRIPLE} 
    -DLIBCXXABI_ENABLE_SHARED=False 
    -DLIBCXXABI_ENABLE_STATIC=True 
)


ExternalProject_Add(
    libcxxabi_bin
    PREFIX ${COMMON_PREFIX} 
    SOURCE_DIR ${LIBCXXABI_SRCDIR}
    CMAKE_ARGS ${LIBCXXABI_CMAKE_ARGS}
)

add_dependencies(libcxxabi_bin newlib_cygwin)

add_library(libcxxabi STATIC IMPORTED GLOBAL)

add_dependencies(libcxxabi libcxxabi_bin)

set (LIBCXXABI_STATIC_LIB ${COMMON_PREFIX}/lib/libc++abi.a)

set_target_properties(libcxxabi PROPERTIES IMPORTED_LOCATION ${LIBCXXABI_STATIC_LIB})

# libcxx

set(LIBCXX_SRCDIR ${CMAKE_CURRENT_SOURCE_DIR}/libcxx)


set(LIBCXX_CFLAGS "-I${COMMON_PREFIX}/include -fPIC -nostdlibinc -mno-red-zone -D__ELF__ -D_LDBL_EQ_DBL -D_GNU_SOURCE -D_POSIX_TIMERS -D_LIBCPPABI_VERSION=1002 -D_LIBCPP_HAS_NO_THREADS -D_LIBCPP_HAS_NO_MONOTONIC_CLOCK")

set (LIBCXX_STATIC_LIB ${COMMON_PREFIX}/lib/libc++.a)

list(APPEND LIBCXX_INCLUDE_PATH ${COMMON_PREFIX}/include)
list(APPEND LIBCXX_INCLUDE_PATH ${COMMON_PREFIX}/include/c++/v1)


file(MAKE_DIRECTORY ${COMMON_PREFIX})
file(MAKE_DIRECTORY ${LIBCXX_INCLUDE_PATH})

list(APPEND LIBCXX_CMAKE_ARGS
    -DCMAKE_INSTALL_PREFIX=${COMMON_PREFIX}
    -DCMAKE_CXX_COMPILER=clang++
    -DCMAKE_CXX_FLAGS=${LIBCXX_CFLAGS} 
    -DCMAKE_CXX_COMPILER_TARGET=${TARGET_TRIPLE} 
    -DCMAKE_C_COMPILER=clang 
    -DCMAKE_C_FLAGS=${LIBCXX_CFLAGS} 
    -DCMAKE_C_COMPILER_TARGET=${TARGET_TRIPLE}
    -DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY 
    -DCMAKE_BUILD_TYPE=Release 
    -DLIBCXX_CXX_ABI=libcxxabi 
    -DLIBCXX_CXX_ABI_INCLUDE_PATHS=${CMAKE_CURRENT_SOURCE_DIR}/libcxxabi/include
    -DLIBCXX_CXX_ABI_LIBRARY_PATH=${COMMON_PREFIX}/lib
    -DLIBCXX_ENABLE_EXCEPTIONS=False 
    -DLIBCXX_ENABLE_FILESYSTEM=False 
    -DLIBCXX_ENABLE_MONOTONIC_CLOCK=False 
    -DLIBCXX_ENABLE_RTTI=False 
    -DLIBCXX_ENABLE_THREADS=False 
    -DLIBCXX_ENABLE_SHARED=False 
    -DLIBCXX_ENABLE_STATIC=True 
)


ExternalProject_Add(
    libcxx_bin
    PREFIX ${COMMON_PREFIX} 
    SOURCE_DIR ${LIBCXX_SRCDIR}
    CMAKE_ARGS ${LIBCXX_CMAKE_ARGS}
)

add_dependencies(libcxx_bin libcxxabi_bin newlib_cygwin)

add_library(libcxx STATIC IMPORTED GLOBAL)

add_dependencies(libcxx newlib_cygwin libcxxabi_bin libcxx_bin  )

set_target_properties(libcxx PROPERTIES IMPORTED_LOCATION ${LIBCXX_STATIC_LIB})
set_target_properties(libcxx PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${LIBCXX_INCLUDE_PATH}")
